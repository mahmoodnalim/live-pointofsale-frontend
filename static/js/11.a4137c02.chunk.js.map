{"version":3,"sources":["http/supplierApi.js","store/selectors/supplierSelector.js","store/actions/supplierActions.js","utilities/helpers/supplierHelpers.js","components/pages/Suppliers.js"],"names":["getSupplierList","a","http","get","limit","getSupplierById","id","updateSupplierById","body","put","createSupplier","post","deleteSupplier","deleteById","searchSupplier","selectSupplier","state","supplier","selectAllSupplierList","createSelector","allSupplierList","selectSupplierList","supplierList","setSupplierList","payload","dispatch","type","ACTION_TYPES","setAllSupplierList","getFormattedSupplierList","data","map","firstName","phoneNo","companyName","Suppliers","useHistory","location","push","useState","suggestions","setSuggestions","fetchSuppliers","setFetchSuppliers","classes","useStyles","useSelector","useDispatch","useEffect","fetchApi","then","res","Array","isArray","displaySupplierList","catch","_err","toast","error","searchSuccess","console","log","searchErr","handleSearchChange","e","searchValue","target","value","trim","length","searchComponent","className","inputsTop","searchTab","getOptionLabel","option","lastName","options","onChange","_e","filter","sup","loading","noOptionsText","renderInput","params","autoFocus","label","variant","InputProps","startAdornment","endAdornment","color","size","pageContainer","title","createNewPath","tableData","tableHeaders","getSupplierTableHeaders","handleEdit","pathname"],"mappings":"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","file":"static/js/11.a4137c02.chunk.js","sourcesContent":["import http from './http';\n\nexport async function getSupplierList() {\n  return await http.get('/suppliers', { limit: 20 });\n}\n\nexport async function getSupplierById(id) {\n  return await http.get(`./suppliers/${id}`);\n}\n\nexport async function updateSupplierById(id, body) {\n  return await http.put(`./suppliers/${id}`, body);\n}\n\nexport async function createSupplier(body) {\n  return await http.post('./suppliers', body);\n}\n\nexport async function deleteSupplier(id) {\n  return await http.deleteById('./suppliers', id);\n}\nexport async function searchSupplier(id) {\n  return await http.get(`/suppliers/search/${id}`);\n}\n","import { createSelector } from 'reselect';\n\nconst selectSupplier = state => state.supplier;\n\nexport const selectAllSupplierList = createSelector(\n  selectSupplier,\n  supplier => supplier.allSupplierList\n);\n\nexport const selectSupplierList = createSelector(\n  selectSupplier,\n  supplier => supplier.supplierList\n);\n","import * as ACTION_TYPES from './actionTypes';\n\nexport const setSupplierList = payload => dispatch =>\n  dispatch({\n    type: ACTION_TYPES.SET_SUPPLIER_LIST,\n    payload,\n  });\n\nexport const setAllSupplierList = payload => dispatch =>\n  dispatch({\n    type: ACTION_TYPES.SET_ALL_SUPPLIER_LIST,\n    payload,\n  });\n","export const getFormattedSupplierList = data =>\n  data.map(({ id, firstName, phoneNo, companyName }) => {\n    return {\n      id,\n      firstName,\n      companyName,\n      phoneNo: phoneNo || '-',\n    };\n  });\n","import React, { useEffect, useState, Fragment } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport TableBuilder from '../uis/TableBuilder/TableBuilder.js';\nimport { useHistory } from 'react-router-dom';\nimport { getSupplierTableHeaders } from '../../utilities/helpers/tableHelpers.js';\nimport { fetchApi } from '../../store/actions/globalAction.js';\nimport useStyles from '../../styles/useStyles.js';\nimport { getSupplierList, searchSupplier } from '../../http/supplierApi';\nimport { TextField, CircularProgress } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport PageTitle from '../uis/UtilComponents/PageTitle/PageTitle.js';\nimport { toast } from 'react-toastify';\nimport {\n  selectSupplierList,\n  selectAllSupplierList,\n} from '../../store/selectors/supplierSelector.js';\nimport {\n  setSupplierList,\n  setAllSupplierList,\n} from '../../store/actions/supplierActions.js';\nimport { getFormattedSupplierList } from '../../utilities/helpers/supplierHelpers.js';\n\nconst Suppliers = () => {\n  const { location, push } = useHistory();\n  const [suggestions, setSuggestions] = useState([]);\n  const [fetchSuppliers, setFetchSuppliers] = useState(false);\n  const classes = useStyles();\n\n  const supplierList = useSelector(selectSupplierList);\n  const allSupplierList = useSelector(selectAllSupplierList);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const handleGetSupplierResp = res => {\n      dispatch(fetchApi(false));\n      if (Array.isArray(res.data)) {\n        const displaySupplierList = getFormattedSupplierList(res.data);\n        dispatch(setSupplierList(displaySupplierList));\n        dispatch(setAllSupplierList(displaySupplierList));\n      }\n    };\n\n    const handleGetSupplierErr = _err => {\n      toast.error('Unable to get suppliers');\n      dispatch(fetchApi(false));\n    };\n\n    dispatch(fetchApi(true));\n    getSupplierList()\n      .then(handleGetSupplierResp)\n      .catch(handleGetSupplierErr);\n  }, [dispatch]);\n\n  const handleEdit = supplier => {\n    const editClick = () => {\n      push(`${location.pathname}/edit/${supplier.id}`);\n    };\n    return editClick;\n  };\n\n  const handleSearchSubmit = (_e, value) => {\n    if (value) {\n      dispatch(\n        setSupplierList(supplierList.filter(sup => sup.id === value.id))\n      );\n    } else {\n      dispatch(setSupplierList(allSupplierList));\n    }\n  };\n\n  const searchSuccess = res => {\n    setFetchSuppliers(false);\n    console.log(res.data);\n    if (Array.isArray(res.data)) {\n      setSuggestions(res.data);\n      dispatch(setSupplierList(getFormattedSupplierList(res.data)));\n    }\n  };\n\n  const searchErr = () => {\n    toast.error('Unable to search suppliers');\n    setFetchSuppliers(false);\n  };\n\n  const handleSearchChange = e => {\n    setFetchSuppliers(true);\n    const searchValue = e.target.value.trim();\n\n    if (searchValue.length) {\n      searchSupplier(searchValue)\n        .then(searchSuccess)\n        .catch(searchErr);\n    } else {\n      dispatch(setSupplierList(allSupplierList));\n    }\n  };\n\n  const searchComponent = (\n    <div className={classes.inputsTop}>\n      <div className={classes.searchTab}>\n        <Autocomplete\n          id=\"customer search-item-search\"\n          getOptionLabel={option => `${option.firstName}-${option.lastName}`}\n          options={suggestions}\n          onChange={handleSearchSubmit}\n          loading={fetchSuppliers}\n          noOptionsText={'No suppliers found'}\n          renderInput={params => (\n            <TextField\n              autoFocus\n              {...params}\n              label=\"Enter a Supplier Name or Id\"\n              variant=\"outlined\"\n              onChange={handleSearchChange}\n              InputProps={{\n                ...params.InputProps,\n                startAdornment: <SearchIcon />,\n                endAdornment: (\n                  <Fragment>\n                    {fetchSuppliers && (\n                      <CircularProgress color=\"inherit\" size={20} />\n                    )}\n                    {params.InputProps.endAdornment}\n                  </Fragment>\n                ),\n              }}\n            />\n          )}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div className={classes.pageContainer}>\n      <PageTitle title=\"Suppliers\" createNewPath=\"suppliers\" />\n      {searchComponent}\n      <TableBuilder\n        tableData={supplierList}\n        tableHeaders={getSupplierTableHeaders}\n        handleEdit={handleEdit}\n      />\n    </div>\n  );\n};\n\nexport default Suppliers;\n"],"sourceRoot":""}