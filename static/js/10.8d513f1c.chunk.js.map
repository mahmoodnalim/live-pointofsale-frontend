{"version":3,"sources":["http/supplierApi.js","store/selectors/supplierSelector.js","store/actions/supplierActions.js","utilities/helpers/supplierHelpers.js","components/pages/FormItem/FormItem.styles.js","components/pages/FormItem/FormItemConstants.js","components/pages/FormItem/FormItem.js"],"names":["getSupplierList","a","http","get","limit","getSupplierById","id","updateSupplierById","body","put","createSupplier","post","deleteSupplier","deleteById","searchSupplier","selectSupplier","state","supplier","selectAllSupplierList","createSelector","allSupplierList","selectSupplierList","supplierList","setSupplierList","payload","dispatch","type","ACTION_TYPES","setAllSupplierList","getFormattedSupplierList","data","map","firstName","phoneNo","companyName","SubmitButton","styled","Button","StyledFormControl","FormControl","StyledFieldContainer","Grid","CATEGORY_VALUES","CreateIcon","key","value","FromItem","useForm","control","handleSubmit","register","watch","useDispatch","useHistory","push","goBack","useLocation","useParams","editingItem","useSelector","allBrandList","selectAllBrandList","useState","openConfirm","setOpenConfirmation","useEffect","length","fetchApi","then","res","Array","isArray","catch","_err","toast","error","itemCode","values","category","itemName","brandId","partNumber","split","match","join","toUpperCase","onSubmit","parseInt","description","undefined","updateItemById","PAGE_ROUTES","items","success","createItem","handleDelete","deleteItem","Container","style","width","PageTitle","title","backButton","TextField","name","label","fullWidth","disabled","variant","inputRef","defaultValue","InputLabel","htmlFor","categoryObj","filter","getEditingCategoryValue","as","Select","MenuItem","brand","code","getEditingBrandValue","reOrderLevel","multiline","rows","container","item","xs","color","onClick","ConfirmationPopup","open","close","handleAgree","header","content"],"mappings":"8WAEO,SAAeA,IAAtB,+B,4CAAO,sBAAAC,EAAA,sEACQC,IAAKC,IAAI,aAAc,CAAEC,MAAO,KADxC,oF,sBAIA,SAAeC,EAAtB,kC,4CAAO,WAA+BC,GAA/B,SAAAL,EAAA,sEACQC,IAAKC,IAAL,sBAAwBG,IADhC,oF,sBAIA,SAAeC,EAAtB,oC,4CAAO,WAAkCD,EAAIE,GAAtC,SAAAP,EAAA,sEACQC,IAAKO,IAAL,sBAAwBH,GAAME,GADtC,oF,sBAIA,SAAeE,EAAtB,kC,4CAAO,WAA8BF,GAA9B,SAAAP,EAAA,sEACQC,IAAKS,KAAK,cAAeH,GADjC,oF,sBAIA,SAAeI,EAAtB,kC,4CAAO,WAA8BN,GAA9B,SAAAL,EAAA,sEACQC,IAAKW,WAAW,cAAeP,GADvC,oF,sBAGA,SAAeQ,EAAtB,kC,4CAAO,WAA8BR,GAA9B,SAAAL,EAAA,sEACQC,IAAKC,IAAL,4BAA8BG,IADtC,oF,yDCrBP,gFAEMS,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,UAEzBC,EAAwBC,YACnCJ,GACA,SAAAE,GAAQ,OAAIA,EAASG,mBAGVC,EAAqBF,YAChCJ,GACA,SAAAE,GAAQ,OAAIA,EAASK,iB,iCCXvB,gFAEaC,EAAkB,SAAAC,GAAO,OAAI,SAAAC,GAAQ,OAChDA,EAAS,CACPC,KAAMC,IACNH,cAGSI,EAAqB,SAAAJ,GAAO,OAAI,SAAAC,GAAQ,OACnDA,EAAS,CACPC,KAAMC,IACNH,e,iCCXJ,kCAAO,IAAMK,EAA2B,SAAAC,GAAI,OAC1CA,EAAKC,KAAI,YAA8C,IAA3CzB,EAA0C,EAA1CA,GAAI0B,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,QACzB,MAAO,CACL3B,KACA0B,YACAE,YAJkD,EAAlBA,YAKhCD,QAASA,GAAW,U,6lBCFnB,IAAME,EAAeC,YAAOC,IAAPD,CAAH,KAIZE,EAAoBF,YAAOG,IAAPH,CAAH,KAIjBI,EAAuBJ,YAAOK,IAAPL,CAAH,KCZpBM,GDgBmBN,YAAOO,IAAPP,CAAH,KChBE,CAC7B,CAAEQ,IAAK,KAAMC,MAAO,MACpB,CAAED,IAAK,IAAKC,MAAO,MACnB,CAAED,IAAK,IAAKC,MAAO,MACnB,CAAED,IAAK,KAAMC,MAAO,MACpB,CAAED,IAAK,MAAOC,MAAO,SACrB,CAAED,IAAK,MAAOC,MAAO,SACrB,CAAED,IAAK,OAAQC,MAAO,QACtB,CAAED,IAAK,OAAQC,MAAO,QACtB,CAAED,IAAK,OAAQC,MAAO,QACtB,CAAED,IAAK,OAAQC,MAAO,QACtB,CAAED,IAAK,OAAQC,MAAO,QACtB,CAAED,IAAK,OAAQC,MAAO,QACtB,CAAED,IAAK,OAAQC,MAAO,QACtB,CAAED,IAAK,KAAMC,MAAO,MACpB,CAAED,IAAK,OAAQC,MAAO,QACtB,CAAED,IAAK,OAAQC,MAAO,U,8FC6TTC,UA/SE,WAAO,IAAD,EAC8BC,cAA3CC,EADa,EACbA,QAASC,EADI,EACJA,aAAcC,EADV,EACUA,SAAUC,EADpB,EACoBA,MACnC1B,EAAW2B,cAFI,EAGIC,cAAjBC,EAHa,EAGbA,KAAMC,EAHO,EAGPA,OACNvC,EAAUwC,cAAVxC,MACAV,EAAOmD,cAAPnD,GACFoD,EAAc1C,EAAQA,EAAM0C,YAAc,GAC1CtC,EAAkBuC,YAAYzC,KAC9B0C,EAAeD,YAAYE,KARZ,EASsBC,oBAAS,GAT/B,mBASdC,EATc,KASDC,EATC,KAgBrBC,qBAAU,WAaJ7C,EAAgB8C,SAIpBzC,EAAS0C,aAAS,IAClBnE,cAAkBoE,MAjBY,SAAAC,GAC5B5C,EAAS0C,aAAS,IACdG,MAAMC,QAAQF,EAAIvC,OACpBL,EAASG,YAAmBC,YAAyBwC,EAAIvC,WAcf0C,OAVjB,SAAAC,GAC3BC,IAAMC,MAAM,2BACZlD,EAAS0C,aAAS,UASnB,CAAC/C,EAAgB8C,OAAQzC,IAE5B,IAEImD,EAFEC,EAAS1B,IACP2B,EAA4CD,EAA5CC,SAAUC,EAAkCF,EAAlCE,SAAUC,EAAwBH,EAAxBG,QAASC,EAAeJ,EAAfI,WAErB,gBAAZD,EACFJ,EAAWK,GAAc,IAEzBL,EAAWlB,EAAcA,EAAYkB,SAAW,KAE5CE,GAAYC,GAAYC,KAC1BJ,EAAW,KAGbA,GAAYE,EAAWA,EAASI,MAAM,KAAK,GAAK,GAChDN,GAAYG,EAAyBA,EAtCjBI,MAAM,WACXC,KAAK,IAAIC,cAqCyB,GACjDT,GAAYI,EAAUA,EAAQE,MAAM,KAAK,GAAK,IAGhD,IAAMI,EAAQ,uCAAG,WAAMxD,GAAN,SAAA7B,EAAA,yDACfwB,EAAS0C,aAAS,IAEdrC,EAAKgD,WACPhD,EAAKgD,SAAWhD,EAAKgD,SAASI,MAAM,KAAK,IAGtB,gBAAjBpD,EAAKkD,QACPlD,EAAKkD,QAAU,KAEflD,EAAKkD,QAAUO,SAASzD,EAAKkD,QAAQE,MAAM,KAAK,IAG7CpD,EAAK0D,cACR1D,EAAK0D,iBAAcC,GAGrB3D,EAAKmD,gBAAaQ,EAElB3D,EAAK8C,SAAWA,GAEZlB,EArBW,2CAuBLgC,YAAepF,EAAIwB,GAvBd,QAwBXwB,EAAKqC,IAAYC,OACjBlB,IAAMmB,QAAQ,yBAzBH,kDA2BXnB,IAAMC,MAAM,iCA3BD,yBA6BXlD,EAAS0C,aAAS,IA7BP,wEAiCL2B,YAAWhE,GAjCN,QAkCXwB,EAAKqC,IAAYC,OACjBlB,IAAMmB,QAAQ,yBAnCH,mDAqCXnB,IAAMC,MAAM,yBArCD,yBAuCXlD,EAAS0C,aAAS,IAvCP,2FAAH,sDAgDR4B,GAAY,uCAAG,sBAAA9F,EAAA,sEAEjBwB,EAAS0C,aAAS,IAFD,SAGX6B,YAAW1F,GAHA,OAIjBgD,EAAKqC,IAAYC,OAJA,gDAMjBlB,IAAMC,MAAM,yBANK,yBAQjBlD,EAAS0C,aAAS,IARD,4EAAH,qDAsClB,OACE,kBAAC8B,EAAA,EAAD,CAAWC,MAAO,CAAEC,MAAO,QACzB,kBAACC,EAAA,EAAD,CACEC,MAAO3C,EAAc,YAAc,kBACnC4C,YAAU,IAEZ,0BAAMhB,SAAUrC,EAAaqC,IAC3B,kBAAC9C,EAAD,KACE,kBAAC+D,EAAA,EAAD,CACEC,KAAK,WACLC,MAAM,YACNC,WAAS,EACTC,UAAQ,EACRC,QAAQ,WACR/D,MAAO+B,KAIX,kBAACpC,EAAD,KACE,kBAAC+D,EAAA,EAAD,CACEC,KAAK,WACLK,SAAU3D,EACVuD,MAAM,YACNC,WAAS,EACTE,QAAQ,WACRE,aAAcpD,EAAcA,EAAYqB,SAAW,MAIvD,kBAACvC,EAAD,KACE,kBAACF,EAAD,KACE,kBAACyE,EAAA,EAAD,CAAYC,QAAS,YAArB,YACA,kBAAC,IAAD,CACER,KAAK,WACLxD,QAASA,EACT8D,aAAcpD,EArDM,WAC9B,IAAMuD,EAAcvE,EAAgBwE,QAClC,SAAApC,GAAQ,OAAIA,EAASjC,QAAUa,EAAYoB,YAE7C,MAAM,GAAN,OAAUmC,EAAY,GAAGpE,MAAzB,YAAkCoE,EAAY,GAAGrE,KAiDXuE,GAA4B,QACxDC,GACE,kBAACC,EAAA,EAAD,CAAQ/G,GAAI,WAAYkG,KAAK,YAC1B9D,EAAgBX,KAAI,gBAAGa,EAAH,EAAGA,IAAKC,EAAR,EAAQA,MAAR,OACnB,kBAACyE,EAAA,EAAD,CAAU1E,IAAKA,EAAKC,MAAK,UAAKA,EAAL,YAAcD,IACpCC,WASf,kBAACL,EAAD,KACE,kBAACF,EAAD,KACE,kBAACyE,EAAA,EAAD,CAAYC,QAAS,WAArB,SACA,kBAAC,IAAD,CACER,KAAK,UACLxD,QAASA,EACT8D,aAAcpD,EAlEG,WAC3B,IAAM6D,EAAQ3D,EAAasD,QACzB,SAAAK,GAAK,OAAIA,EAAMjH,KAAOoD,EAAYsB,WAGpC,OAAIuC,EAAMrD,OACF,GAAN,OAAUqD,EAAM,GAAGjH,GAAnB,YAAyBiH,EAAM,GAAGC,MAE7B,cA0D+BC,GAAyB,GACrDL,GACE,kBAACC,EAAA,EAAD,CAAQ/G,GAAI,UAAWkG,KAAK,WAC1B,kBAACc,EAAA,EAAD,CAAU1E,IAAK,cAAeC,MAAO,eAArC,eAGCe,EAAa7B,KAAI,gBAAGzB,EAAH,EAAGA,GAAIkH,EAAP,EAAOA,KAAMhB,EAAb,EAAaA,KAAb,OAChB,kBAACc,EAAA,EAAD,CAAU1E,IAAKtC,EAAIuC,MAAK,UAAKvC,EAAL,YAAWkH,IAAnC,UACMA,EADN,cACgBhB,YASf,gBAAZxB,GACC,kBAACxC,EAAD,KACE,kBAAC+D,EAAA,EAAD,CACEC,KAAK,aACLK,SAAU3D,EACVuD,MAAM,cACNC,WAAS,EACTE,QAAQ,WACRE,aAAcpD,EAAcA,EAAYkB,SAAW,MAKzD,kBAACpC,EAAD,KACE,kBAACF,EAAD,KACE,kBAACyE,EAAA,EAAD,CAAYzG,GAAI,cAAhB,qBACA,kBAAC,IAAD,CACEkG,KAAK,aACLxD,QAASA,EACT8D,aAAcpD,EAAcA,EAAYzC,SAASX,GAAK,GACtD8G,GACE,kBAACC,EAAA,EAAD,CAAQ/G,GAAI,aAAckG,KAAM,cAC7BpF,EAAgBW,KAAI,gBAAGzB,EAAH,EAAGA,GAAI4B,EAAP,EAAOA,YAAP,OACnB,kBAACoF,EAAA,EAAD,CAAU1E,IAAKtC,EAAIuC,MAAOvC,GACvB4B,WAQf,kBAACM,EAAD,KACE,kBAAC+D,EAAA,EAAD,CACEC,KAAK,eACLK,SAAU3D,EACVuD,MAAM,gBACNG,QAAQ,WACRF,WAAS,EACTI,aAAcpD,EAAcA,EAAYgE,aAAe,MAG3D,kBAAClF,EAAD,KACE,kBAAC+D,EAAA,EAAD,CACEC,KAAK,cACLK,SAAU3D,EACVuD,MAAM,cACNG,QAAQ,WACRF,WAAS,EACTiB,WAAS,EACTC,KAAM,KAGV,kBAACnF,EAAA,EAAD,CAAMoF,WAAS,GACb,kBAACpF,EAAA,EAAD,CAAMqF,MAAI,EAACC,GAAI,GACb,kBAAC5F,EAAD,CACEyE,QAAQ,YACRoB,MAAM,YACNC,QAASvE,EA5JgB,WACnCM,GAAoB,IAjBH,WACjBT,KA4KUmD,WAAS,GAERhD,EAAc,SAAW,WAG9B,kBAACjB,EAAA,EAAD,CAAMqF,MAAI,EAACC,GAAI,IACf,kBAACtF,EAAA,EAAD,CAAMqF,MAAI,EAACC,GAAI,GACb,kBAAC5F,EAAD,CACET,KAAK,SACLkF,QAAQ,YACRoB,MAAM,UACNtB,WAAS,GAERhD,EAAc,YAAc,eAKpCK,GACC,kBAACmE,EAAA,EAAD,CACEC,KAAMpE,EACNqE,MA9K8B,WACpCpE,GAAoB,IA8KdqE,YAAatC,GACbzF,GAAG,cACHgI,OAAO,iBACPC,QAAO","file":"static/js/10.8d513f1c.chunk.js","sourcesContent":["import http from './http';\n\nexport async function getSupplierList() {\n  return await http.get('/suppliers', { limit: 20 });\n}\n\nexport async function getSupplierById(id) {\n  return await http.get(`./suppliers/${id}`);\n}\n\nexport async function updateSupplierById(id, body) {\n  return await http.put(`./suppliers/${id}`, body);\n}\n\nexport async function createSupplier(body) {\n  return await http.post('./suppliers', body);\n}\n\nexport async function deleteSupplier(id) {\n  return await http.deleteById('./suppliers', id);\n}\nexport async function searchSupplier(id) {\n  return await http.get(`/suppliers/search/${id}`);\n}\n","import { createSelector } from 'reselect';\n\nconst selectSupplier = state => state.supplier;\n\nexport const selectAllSupplierList = createSelector(\n  selectSupplier,\n  supplier => supplier.allSupplierList\n);\n\nexport const selectSupplierList = createSelector(\n  selectSupplier,\n  supplier => supplier.supplierList\n);\n","import * as ACTION_TYPES from './actionTypes';\n\nexport const setSupplierList = payload => dispatch =>\n  dispatch({\n    type: ACTION_TYPES.SET_SUPPLIER_LIST,\n    payload,\n  });\n\nexport const setAllSupplierList = payload => dispatch =>\n  dispatch({\n    type: ACTION_TYPES.SET_ALL_SUPPLIER_LIST,\n    payload,\n  });\n","export const getFormattedSupplierList = data =>\n  data.map(({ id, firstName, phoneNo, companyName }) => {\n    return {\n      id,\n      firstName,\n      companyName,\n      phoneNo: phoneNo || '-',\n    };\n  });\n","import styled from 'styled-components';\nimport { Button, FormControl, Grid } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\n\nexport const SubmitButton = styled(Button)`\n  margin: 20px 0;\n`;\n\nexport const StyledFormControl = styled(FormControl)`\n  width: 100%;\n`;\n\nexport const StyledFieldContainer = styled(Grid)`\n  margin: 20px 0;\n`;\n\nexport const StyledCreateIcon = styled(CreateIcon)`\n  margin-right: 10px;\n  margin-left: 20px;\n`;\n","export const CATEGORY_VALUES = [\n  { key: '2S', value: '2S' },\n  { key: '3', value: '3P' },\n  { key: '5', value: '5P' },\n  { key: '4S', value: '4S' },\n  { key: '175', value: '175cc' },\n  { key: '205', value: '205cc' },\n  { key: '2006', value: '2006' },\n  { key: '2008', value: '2008' },\n  { key: '2010', value: '2010' },\n  { key: '2011', value: '2011' },\n  { key: '2012', value: '2012' },\n  { key: '2013', value: '2013' },\n  { key: '2014', value: '2014' },\n  { key: 'FL', value: 'FL' },\n  { key: 'FLOM', value: 'FLOM' },\n  { key: 'FLNM', value: 'FLNM' },\n];\n","import React, { useEffect, useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\nimport {\n  TextField,\n  InputLabel,\n  Select,\n  MenuItem,\n  Grid,\n  Container,\n} from '@material-ui/core';\nimport {\n  SubmitButton,\n  StyledFormControl,\n  StyledFieldContainer,\n} from './FormItem.styles';\nimport { CATEGORY_VALUES } from './FormItemConstants';\nimport { fetchApi } from '../../../store/actions/globalAction';\nimport { createItem, updateItemById, deleteItem } from '../../../http/itemApi';\nimport { PAGE_ROUTES } from '../../../services/routeService';\nimport { toast } from 'react-toastify';\nimport { setAllSupplierList } from '../../../store/actions/supplierActions';\nimport { getFormattedSupplierList } from '../../../utilities/helpers/supplierHelpers';\nimport { getSupplierList } from '../../../http/supplierApi';\nimport { selectAllSupplierList } from '../../../store/selectors/supplierSelector';\nimport ConfirmationPopup from '../../uis/ConfirmationPopup';\nimport { selectAllBrandList } from '../../../store/selectors/brandSelector';\nimport PageTitle from '../../uis/UtilComponents/PageTitle/PageTitle';\n\nconst FromItem = () => {\n  const { control, handleSubmit, register, watch } = useForm();\n  const dispatch = useDispatch();\n  const { push, goBack } = useHistory();\n  const { state } = useLocation();\n  const { id } = useParams();\n  const editingItem = state ? state.editingItem : '';\n  const allSupplierList = useSelector(selectAllSupplierList);\n  const allBrandList = useSelector(selectAllBrandList);\n  const [openConfirm, setOpenConfirmation] = useState(false);\n\n  const getFirstNames = str => {\n    const matches = str.match(/\\b(\\w)/g);\n    return matches.join('').toUpperCase();\n  };\n\n  useEffect(() => {\n    const handleGetSupplierResp = res => {\n      dispatch(fetchApi(false));\n      if (Array.isArray(res.data)) {\n        dispatch(setAllSupplierList(getFormattedSupplierList(res.data)));\n      }\n    };\n\n    const handleGetSupplierErr = _err => {\n      toast.error('Unable to get suppliers');\n      dispatch(fetchApi(false));\n    };\n\n    if (allSupplierList.length) {\n      return;\n    }\n\n    dispatch(fetchApi(true));\n    getSupplierList().then(handleGetSupplierResp).catch(handleGetSupplierErr);\n  }, [allSupplierList.length, dispatch]);\n\n  const values = watch();\n  const { category, itemName, brandId, partNumber } = values;\n  let itemCode;\n  if (brandId === 'Original-OE') {\n    itemCode = partNumber || '';\n  } else {\n    itemCode = editingItem ? editingItem.itemCode : 'G';\n\n    if (category || itemName || brandId) {\n      itemCode = 'G';\n    }\n\n    itemCode += category ? category.split('-')[1] : '';\n    itemCode += itemName ? getFirstNames(itemName) : '';\n    itemCode += brandId ? brandId.split('-')[1] : '';\n  }\n\n  const onSubmit = async data => {\n    dispatch(fetchApi(true));\n\n    if (data.category) {\n      data.category = data.category.split('-')[0];\n    }\n\n    if (data.brandId === 'Original-OE') {\n      data.brandId = null;\n    } else {\n      data.brandId = parseInt(data.brandId.split('-')[0]);\n    }\n\n    if (!data.description) {\n      data.description = undefined;\n    }\n\n    data.partNumber = undefined;\n\n    data.itemCode = itemCode;\n\n    if (editingItem) {\n      try {\n        await updateItemById(id, data);\n        push(PAGE_ROUTES.items);\n        toast.success('Succuessfully Updated');\n      } catch (err) {\n        toast.error('unable to update item details');\n      } finally {\n        dispatch(fetchApi(false));\n      }\n    } else {\n      try {\n        await createItem(data);\n        push(PAGE_ROUTES.items);\n        toast.success('Succuessfully created');\n      } catch (err) {\n        toast.error('unable to create item');\n      } finally {\n        dispatch(fetchApi(false));\n      }\n    }\n  };\n\n  const handleBack = () => {\n    goBack();\n  };\n\n  const handleDelete = async () => {\n    try {\n      dispatch(fetchApi(true));\n      await deleteItem(id);\n      push(PAGE_ROUTES.items);\n    } catch (_err) {\n      toast.error('Unable to delete item');\n    } finally {\n      dispatch(fetchApi(false));\n    }\n  };\n\n  const handleOpenDeleteConfirmation = () => {\n    setOpenConfirmation(true);\n  };\n\n  const handleCloseDeleteConfirmation = () => {\n    setOpenConfirmation(false);\n  };\n\n  const getEditingCategoryValue = () => {\n    const categoryObj = CATEGORY_VALUES.filter(\n      category => category.value === editingItem.category\n    );\n    return `${categoryObj[0].value}-${categoryObj[0].key}`;\n  };\n\n  const getEditingBrandValue = () => {\n    const brand = allBrandList.filter(\n      brand => brand.id === editingItem.brandId\n    );\n\n    if (brand.length) {\n      return `${brand[0].id}-${brand[0].code}`;\n    }\n    return 'Original-OE';\n  };\n\n  return (\n    <Container style={{ width: '80%' }}>\n      <PageTitle\n        title={editingItem ? 'Edit Item' : 'Create New Item'}\n        backButton\n      />\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <StyledFieldContainer>\n          <TextField\n            name=\"itemCode\"\n            label=\"Item Code\"\n            fullWidth\n            disabled\n            variant=\"outlined\"\n            value={itemCode}\n          />\n        </StyledFieldContainer>\n\n        <StyledFieldContainer>\n          <TextField\n            name=\"itemName\"\n            inputRef={register}\n            label=\"Item Name\"\n            fullWidth\n            variant=\"outlined\"\n            defaultValue={editingItem ? editingItem.itemName : ''}\n          />\n        </StyledFieldContainer>\n\n        <StyledFieldContainer>\n          <StyledFormControl>\n            <InputLabel htmlFor={'category'}>Category</InputLabel>\n            <Controller\n              name=\"category\"\n              control={control}\n              defaultValue={editingItem ? getEditingCategoryValue() : '2S-2S'}\n              as={\n                <Select id={'category'} name=\"category\">\n                  {CATEGORY_VALUES.map(({ key, value }) => (\n                    <MenuItem key={key} value={`${value}-${key}`}>\n                      {value}\n                    </MenuItem>\n                  ))}\n                </Select>\n              }\n            />\n          </StyledFormControl>\n        </StyledFieldContainer>\n\n        <StyledFieldContainer>\n          <StyledFormControl>\n            <InputLabel htmlFor={'brandId'}>Brand</InputLabel>\n            <Controller\n              name=\"brandId\"\n              control={control}\n              defaultValue={editingItem ? getEditingBrandValue() : ''}\n              as={\n                <Select id={'brandId'} name=\"brandId\">\n                  <MenuItem key={'Original-OE'} value={'Original-OE'}>\n                    Original-OE\n                  </MenuItem>\n                  {allBrandList.map(({ id, code, name }) => (\n                    <MenuItem key={id} value={`${id}-${code}`}>\n                      {`${code} - ${name}`}\n                    </MenuItem>\n                  ))}\n                </Select>\n              }\n            />\n          </StyledFormControl>\n        </StyledFieldContainer>\n\n        {brandId === 'Original-OE' && (\n          <StyledFieldContainer>\n            <TextField\n              name=\"partNumber\"\n              inputRef={register}\n              label=\"Part Number\"\n              fullWidth\n              variant=\"outlined\"\n              defaultValue={editingItem ? editingItem.itemCode : ''}\n            />\n          </StyledFieldContainer>\n        )}\n\n        <StyledFieldContainer>\n          <StyledFormControl>\n            <InputLabel id={'supplierId'}>Select a Supplier</InputLabel>\n            <Controller\n              name=\"supplierId\"\n              control={control}\n              defaultValue={editingItem ? editingItem.supplier.id : ''}\n              as={\n                <Select id={'supplierId'} name={'supplierId'}>\n                  {allSupplierList.map(({ id, companyName }) => (\n                    <MenuItem key={id} value={id}>\n                      {companyName}\n                    </MenuItem>\n                  ))}\n                </Select>\n              }\n            />\n          </StyledFormControl>\n        </StyledFieldContainer>\n        <StyledFieldContainer>\n          <TextField\n            name=\"reOrderLevel\"\n            inputRef={register}\n            label=\"Reorder level\"\n            variant=\"outlined\"\n            fullWidth\n            defaultValue={editingItem ? editingItem.reOrderLevel : ''}\n          />\n        </StyledFieldContainer>\n        <StyledFieldContainer>\n          <TextField\n            name=\"description\"\n            inputRef={register}\n            label=\"Description\"\n            variant=\"outlined\"\n            fullWidth\n            multiline\n            rows={2}\n          />\n        </StyledFieldContainer>\n        <Grid container>\n          <Grid item xs={5}>\n            <SubmitButton\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={editingItem ? handleOpenDeleteConfirmation : handleBack}\n              fullWidth\n            >\n              {editingItem ? 'Delete' : 'Cancel'}\n            </SubmitButton>\n          </Grid>\n          <Grid item xs={2} />\n          <Grid item xs={5}>\n            <SubmitButton\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              fullWidth\n            >\n              {editingItem ? 'Edit Item' : 'Add Item'}\n            </SubmitButton>\n          </Grid>\n        </Grid>\n      </form>\n      {openConfirm && (\n        <ConfirmationPopup\n          open={openConfirm}\n          close={handleCloseDeleteConfirmation}\n          handleAgree={handleDelete}\n          id=\"deletePopup\"\n          header=\"Confirm Delete\"\n          content={`Are you sure want to delete this item?`}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default FromItem;\n"],"sourceRoot":""}