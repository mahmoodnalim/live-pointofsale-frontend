{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","../node_modules/@material-ui/core/esm/Switch/Switch.js","components/pages/Customers.js"],"names":["SwitchBase","props","ref","autoFocus","checkedProp","checked","checkedIcon","classes","className","defaultChecked","disabledProp","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_useControlled","controlled","default","Boolean","state","_useControlled2","setCheckedState","muiFormControl","hasLabelFor","component","root","role","undefined","event","input","newChecked","target","padding","cursor","position","opacity","width","height","top","left","margin","zIndex","FormControlLabel","control","label","_props$labelPlacement","labelPlacement","controlProps","forEach","key","concat","theme","display","alignItems","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","color","palette","text","Switch","_props$color","_props$edge","edge","_props$size","size","thumb","edgeStart","edgeEnd","switchBase","track","overflow","boxSizing","flexShrink","colorAdjust","grey","transition","transitions","create","duration","shortest","transform","colorPrimary","primary","main","backgroundColor","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","boxShadow","shadows","borderRadius","mapActionToProps","fetchApi","connect","global","useHistory","location","push","useState","customerList","setCustomerList","suggestions","setSuggestions","fetchCustomers","setFetchCustomers","isCreditCustomers","setIsCreditCustomers","useStyles","handleGetCustomerResp","useCallback","res","Array","isArray","data","displayCustomerList","getFormattedList","handleGetCustomerErr","_err","toast","error","useEffect","getCustomerList","then","catch","customerTableData","handleSearchChange","e","trimmedValue","trim","length","searchCustomer","console","log","searchComponent","inputsTop","searchTab","getOptionLabel","option","firstName","lastName","options","_e","loading","noOptionsText","renderInput","params","variant","InputProps","startAdornment","endAdornment","filter","dueTotal","map","index","phoneNo","pageContainer","title","createNewPath","tableData","tableHeaders","getDueCustomerTableHeaders","getCustomerTableHeaders","handleEdit","customer","pathname","payButton","payButtonClick"],"mappings":"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","file":"static/js/12.f00de6c8.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\"; // @inheritedComponent IconButton\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import React, { useEffect, useState, Fragment, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport TableBuilder from '../uis/TableBuilder/TableBuilder';\nimport { useHistory } from 'react-router-dom';\nimport {\n  getCustomerTableHeaders,\n  getDueCustomerTableHeaders,\n} from '../../utilities/helpers/tableHelpers.js';\nimport { getCustomerList, searchCustomer } from '../../http/customerApi';\nimport { fetchApi } from '../../store/actions/globalAction.js';\nimport useStyles from '../../styles/useStyles.js';\nimport {\n  TextField,\n  CircularProgress,\n  Switch,\n  FormControlLabel,\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport PageTitle from '../uis/UtilComponents/PageTitle/PageTitle';\nimport { toast } from 'react-toastify';\n\nconst Customers = ({ fetchApi }) => {\n  const { location, push } = useHistory();\n  const [customerList, setCustomerList] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n  const [fetchCustomers, setFetchCustomers] = useState(false);\n  const [isCreditCustomers, setIsCreditCustomers] = useState(false);\n  const classes = useStyles();\n\n  const handleGetCustomerResp = useCallback(\n    res => {\n      fetchApi(false);\n      if (Array.isArray(res.data)) {\n        const displayCustomerList = getFormattedList(res.data);\n        setCustomerList(displayCustomerList);\n      }\n    },\n    [fetchApi]\n  );\n\n  const handleGetCustomerErr = useCallback(_err => {\n    toast.error('Unable to get customers');\n  }, []);\n\n  useEffect(() => {\n    fetchApi(true);\n    getCustomerList().then(handleGetCustomerResp).catch(handleGetCustomerErr);\n  }, [fetchApi, handleGetCustomerErr, handleGetCustomerResp]);\n\n  const handleEdit = customer => {\n    const editClick = () => {\n      push(`${location.pathname}/edit/${customer.id}`);\n    };\n    return editClick;\n  };\n\n  const handleSearchSubmit = (_e, value) => {\n    const handleGetCustomerByIdSuccess = res => {\n      fetchApi(false);\n      if (Array.isArray(res.data)) {\n        const displayCustomerList = getFormattedList(res.data);\n        setCustomerList(displayCustomerList);\n      }\n    };\n    const handleGetCustomerByIdErr = _err => {\n      toast.error('Unable to filter customer detail');\n      fetchApi(false);\n    };\n    if (value) {\n      searchCustomer(value.id)\n        .then(handleGetCustomerByIdSuccess)\n        .catch(handleGetCustomerByIdErr);\n    }\n  };\n  const handleCreditCustomersToggler = e => {\n    setIsCreditCustomers(e.target.checked);\n  };\n\n  const handleSearchChange = e => {\n    const searchSuccess = res => {\n      setFetchCustomers(false);\n      console.log(res.data);\n      if (Array.isArray(res.data)) {\n        setSuggestions(res.data);\n        const displayCustomerList = getFormattedList(res.data);\n        setCustomerList(displayCustomerList);\n      }\n    };\n\n    const searchErr = () => {\n      toast.error('Unable to search customers');\n    };\n\n    const trimmedValue = e.target.value.trim();\n\n    if (trimmedValue.length) {\n      setFetchCustomers(true);\n      searchCustomer(trimmedValue).then(searchSuccess).catch(searchErr);\n    } else {\n      getCustomerList().then(handleGetCustomerResp).catch(handleGetCustomerErr);\n    }\n  };\n\n  const searchComponent = (\n    <div className={classes.inputsTop}>\n      <div className={classes.searchTab}>\n        <Autocomplete\n          id=\"customer search-item-search\"\n          getOptionLabel={option => `${option.firstName}-${option.lastName}`}\n          options={suggestions}\n          onChange={handleSearchSubmit}\n          loading={fetchCustomers}\n          noOptionsText={'No customers found'}\n          renderInput={params => (\n            <TextField\n              autoFocus\n              {...params}\n              label=\"Enter a Customer name or Id\"\n              variant=\"outlined\"\n              onChange={handleSearchChange}\n              InputProps={{\n                ...params.InputProps,\n                startAdornment: <SearchIcon />,\n                endAdornment: (\n                  <Fragment>\n                    {fetchCustomers && (\n                      <CircularProgress color=\"inherit\" size={20} />\n                    )}\n                    {params.InputProps.endAdornment}\n                  </Fragment>\n                ),\n              }}\n            />\n          )}\n        />\n      </div>\n    </div>\n  );\n  let customerTableData;\n  if (isCreditCustomers) {\n    customerTableData = customerList.filter(({ dueTotal }) => dueTotal > 0);\n    customerTableData = customerTableData.map(\n      ({ id, firstName, lastName, phoneNo, dueTotal }, index) => {\n        return { id, firstName, lastName, phoneNo, dueTotal };\n      }\n    );\n  } else {\n    customerTableData = customerList.map(\n      ({ id, firstName, lastName, phoneNo }, index) => {\n        return { id, firstName, lastName, phoneNo };\n      }\n    );\n  }\n  const handlePayButttonClick = customer => {\n    const handlePayClick = () => {\n      push(`/cashbooks/payCustomerDue/${customer.id}`);\n    };\n    return handlePayClick;\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.pageContainer}>\n        <PageTitle title=\"Customers\" createNewPath=\"customers\" />\n        {searchComponent}\n        <div>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={isCreditCustomers}\n                onChange={handleCreditCustomersToggler}\n                name=\"credit-customer-toggler\"\n              />\n            }\n            value={isCreditCustomers}\n            label=\"Show Credit Customers\"\n            labelPlacement=\"start\"\n          />\n        </div>\n\n        <TableBuilder\n          tableData={customerTableData}\n          tableHeaders={\n            isCreditCustomers\n              ? getDueCustomerTableHeaders\n              : getCustomerTableHeaders\n          }\n          handleEdit={handleEdit}\n          payButton={isCreditCustomers}\n          payButtonClick={handlePayButttonClick}\n        />\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ global }) => {\n  return { ...global };\n};\n\nconst mapActionToProps = {\n  fetchApi,\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(Customers);\n\nconst getFormattedList = data =>\n  data.map(({ id, firstName, lastName, phoneNo, dueTotal }) => {\n    return { id, firstName, lastName, phoneNo, dueTotal };\n  });\n"],"sourceRoot":""}